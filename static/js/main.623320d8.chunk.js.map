{"version":3,"sources":["components/Card.js","components/Input.js","components/Button.js","components/JobItem.js","utils/index.js","useState/HookComponent.js","useState/validate.js","useEffect/mockData.js","useEffect/HookComponent.js","useEffect/constants.js","useContext/providers/LanguageProvider.js","useContext/components/LanguageItem.js","useContext/components/Languages.js","useContext/i18n.js","useContext/components/Message.js","useContext/components/MainBar.js","useContext/components/Header.js","useContext/components/CustomCard.js","useContext/components/Content.js","useContext/HookComponent.js","useReducer/components/Item.js","useReducer/components/Footer.js","useReducer/components/Card.js","useReducer/components/Input.js","useReducer/components/Title.js","useReducer/reducer.js","useReducer/constants.js","useReducer/HookComponent.js","useReducer/actions.js","memoization/components/Button.js","memoization/components/Posts.js","memoization/HookComponent.js","memoization/constants.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","width","FormGroup","Label","label","StyledInput","input","Error","small","Input","type","value","handleChange","error","placeholder","onChange","button","CustomCard","Card","Image","img","Info","a","JobItem","item","handleClick","title","company_logo","company","src","onClick","objectToString","JSON","stringify","HookComponent","useState","user","setUser","password","setPassword","errors","setErrors","formValues","onSubmit","e","preventDefault","object","values","length","validate","Object","keys","alert","target","id","url","created_at","company_url","location","description","how_to_apply","isLoading","setIsLoading","data","setData","setError","useEffect","fetch","response","status","statusText","json","mockData","callApi","setTitle","document","body","addEventListener","clientY","removeEventListener","map","index","key","LanguageContext","React","createContext","language","setLanguage","Styled","span","isActive","LanguageItem","text","context","useContext","Languages","ES","welcome","title1","description1","title2","description2","title3","description3","title4","description4","title5","description5","title6","description6","EN","FR","Message","i18n","MainBar","Header","Description","Content","GlobalStyle","createGlobalStyle","LanguageProvider","Item","handleClickItem","Align","ContainerButtons","Container","Button","Footer","totalItems","active","handleClickFilter","handleClickClear","handleClickReset","INITIAL_STATE","activeFilter","items","init","reducer","state","action","payload","Date","valueOf","filter","useReducer","dispatch","Title","filterByStatus","indexOf","filteredData","setActiveFilter","StyledButton","icon","memo","times","className","post","toUpperCase","term","setTerm","useMemo","loveCounter","setLoveCounter","hateCounter","setHateCounter","handleClickButtonLove","useCallback","handleClickButtonHate","App","basename","process","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.623320d8.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n    background-color: #FFF;\n    padding: 1.5rem;\n    margin-right: 0;\n    margin-left: 0;\n    width: ${({width = 300}) => width}px;\n    margin: 10px 0px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FormGroup = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  font-size: 1.2rem;\n  line-height: 2;\n  background-color: #fff;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n\n  ::placeholder {\n    font-size: 15px;\n    font-family: Roboto;\n    padding: 10px;\n    font-weight: 100;\n  }\n`;\n\nconst Error = styled.small`\n  color: #dc3545;\n  font-weight: 500;\n`;\n\nconst Input = ({\n  type = \"text\",\n  value = \"\",\n  handleChange,\n  label,\n  error,\n  placeholder,\n}) => {\n  return (\n    <FormGroup>\n      <Label>{label}</Label>\n      <StyledInput\n        value={value}\n        type={type}\n        onChange={handleChange}\n        placeholder={placeholder}\n      />\n      <Error>{error && error}</Error>\n    </FormGroup>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport default styled.button`\n    background-color: #28a745;\n    border: none;\n    padding: 10px 15px;\n    font-size: 15px;\n    border-radius: 5px;\n    color: #FFF;\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\nimport Button from \"./Button\";\n\nconst CustomCard = styled(Card)`\n  display: flex;\n  justify-content: space-between;\n  text-align: center;\n  align-items: center;\n`;\n\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n`;\n\nconst Info = styled.a`\n  max-width: 400px;\n`;\n\nconst JobItem = ({ item, handleClick }) => {\n  const { type, title, company_logo, company } = item;\n\n  return (\n    <CustomCard width={600}>\n      <Image src={company_logo} />\n      <Info>\n        <strong>{title}</strong>\n        <br />\n        <small>{type}</small>\n        <br />\n        <small>{company}</small>\n      </Info>\n      <div>\n        <Button onClick={handleClick}>Select</Button>\n      </div>\n    </CustomCard>\n  );\n};\n\nexport default JobItem;\n","const objectToString = (value) => JSON.stringify(value, null, 1);\n\nconst isEmptyObject = (object) => Object.keys(object).length === 0;\n\nexport { objectToString, isEmptyObject };\n","import React, { useState, Profiler } from \"react\";\nimport { Card, Input, Button } from \"../components\";\nimport { objectToString, isEmptyObject } from \"../utils\";\nimport validate from './validate';\n\nconst HookComponent = () => {\n\n  const [user, setUser] = useState();\n  const [password, setPassword] = useState();\n  const [errors, setErrors] = useState({});\n\n  const formValues = { user, password };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = validate(formValues);\n\n    if (!isEmptyObject(errors)) {\n      setErrors(errors);\n      return;\n    }\n\n    alert(\"Sent to api\");\n  };\n\n  return (\n    <>\n      Ejemplo del hook useState().\n      <Card>\n        <form onSubmit={handleSubmit}>\n          <Input\n            label={\"Usuario\"}\n            handleChange={(e) => setUser(e.target.value)}\n            value={user} \n            error={errors.user}\n            />\n          <Input\n            type=\"password\"\n            label={\"Contraseña\"}\n            value={password}\n            handleChange={(e) => setPassword(e.target.value)}\n            error={errors.password}\n            />\n          <Button>Ingresar</Button>\n        </form>\n      </Card>\n      <pre>{objectToString(formValues)}</pre>\n    </>\n  );\n};\n\nexport default HookComponent;\n","export default (values) => {\n  let errors = {};\n\n  if (!values.user) {\n    errors.user = \"Ingrese usuario.\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Ingrese contraseña.\";\n  } else if (values.password.length < 8) {\n    errors.password = \"Contraseña muy corta.\";\n  }\n\n  return errors;\n};\n","export default [\n  {\n    id: \"421871bb-05d3-4fbe-b00c-3f372fa35584\",\n    type: \"Full Time\",\n    url:\n      \"https://jobs.github.com/positions/421871bb-05d3-4fbe-b00c-3f372fa35584\",\n    created_at: \"Tue Aug 04 17:23:12 UTC 2020\",\n    company: \"Sticker Mule\",\n    company_url: \"https://www.stickermule.com/careers\",\n    location: \"Anywhere\",\n    title: \"Javascript Engineer\",\n    description:\n      \"\\u003cp\\u003e\\u003cstrong\\u003eAbout Sticker Mule\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eSticker Mule is the Internet's fastest-growing printing company. We are privately-owned, profitable, and powered by an outstanding, globally distributed team who cares deeply about delivering a great customer experience at the highest technical standards. Our software engineering team operates from 17 different countries, and we're always looking for more exceptional engineers to join us.\\u003c/p\\u003e\\n\\u003cp\\u003eThe Software team is responsible for building and maintaining our front-end and back-end services, developing new features and products, and troubleshooting issues in collaboration with the Support team.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e\\u003ca href=\\\"https://www.stickermule.com/about\\\"\\u003eSee more about our teams here\\u003c/a\\u003e\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eWhat we offer\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003col\\u003e\\n\\u003cli\\u003eRemote working with flexible schedule.\\u003c/li\\u003e\\n\\u003cli\\u003eOpportunity to make a large impact as part of a small, highly motivated team.\\u003c/li\\u003e\\n\\u003cli\\u003eVaried, interesting technical challenges to work on.\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eRequirements\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003col\\u003e\\n\\u003cli\\u003eDocker\\u003c/li\\u003e\\n\\u003cli\\u003eNextJS\\u003c/li\\u003e\\n\\u003cli\\u003eReact\\u003c/li\\u003e\\n\\u003cli\\u003eNodeJS\\u003c/li\\u003e\\n\\u003cli\\u003eGraphQL\\u003c/li\\u003e\\n\\u003cli\\u003ePostgres\\u003c/li\\u003e\\n\\u003cli\\u003eRedis\\u003c/li\\u003e\\n\\u003cli\\u003eFamiliarity with Ruby\\u003c/li\\u003e\\n\\u003cli\\u003eExcellent communication skills (English)\\u003c/li\\u003e\\n\\u003cli\\u003eDegree in Computer Science or equivalent practical experience\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eThe process\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003col\\u003e\\n\\u003cli\\u003eSelected candidates are invited for an introductory interview\\u003c/li\\u003e\\n\\u003cli\\u003eA technical interview discussing your background and work samples provided\\u003c/li\\u003e\\n\\u003cli\\u003eA final meeting with our VP of HR.\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eCompensation and benefits\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003col\\u003e\\n\\u003cli\\u003e$90,000-$115,000+\\u003c/li\\u003e\\n\\u003cli\\u003eSigning bonus\\u003c/li\\u003e\\n\\u003cli\\u003e4 weeks vacation\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\",\n    how_to_apply:\n      '\\u003cp\\u003e\\u003cstrong\\u003eApply here only:\\u003c/strong\\u003e \\u003ca href=\"https://www.stickermule.com/career/7e6bb5ee-9953-4d46-b008-77a3bbc4ee29\"\\u003ehttps://www.stickermule.com/career/7e6bb5ee-9953-4d46-b008-77a3bbc4ee29\\u003c/a\\u003e\\u003c/p\\u003e\\n',\n    company_logo:\n      \"https://jobs.github.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbmlIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--16cf20c989aa63b40869fa6efa450a4e1a79538d/01-sticker-mule-logo-dark-stacked.png\",\n  },\n  {\n    id: \"12002611-44b5-42f0-b75c-1cc3c2b6eee7\",\n    type: \"Full Time\",\n    url:\n      \"https://jobs.github.com/positions/12002611-44b5-42f0-b75c-1cc3c2b6eee7\",\n    created_at: \"Tue Aug 04 17:05:59 UTC 2020\",\n    company: \"Thought Industries\",\n    company_url: \"https://www.thoughtindustries.com/\",\n    location: \"Remote (USA)\",\n    title: \"JavaScript Application Engineer (Remote)\",\n    description:\n      \"\\u003cp\\u003eWe're looking for a JavaScript Application Engineer to help us build out our SaaS Learning Business Platform. Your day to day would be split between improving existing functionality, building \\u0026amp; shipping new functionality \\u0026amp; integrations, and improving the platform as a whole, such as introducing bundle splitting, working on performance, and upgrading our dependencies.\\u003c/p\\u003e\\n\\u003cp\\u003eYou would be a good fit if:\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eYou are excited about new JavaScript technologies like Prettier and GraphQL, but also comfortable mixing them with older technology.\\u003c/li\\u003e\\n\\u003cli\\u003eYou sweat the small stuff, but know when to ship it.\\u003c/li\\u003e\\n\\u003cli\\u003eYou are passionate about listening to users \\u0026amp; building elegant web products.\\u003c/li\\u003e\\n\\u003cli\\u003eYou are comfortable navigating a large existing codebase and learning new technologies and techniques along the way.\\u003c/li\\u003e\\n\\u003cli\\u003eYou have 2+ years of experience working in a team production environment shipping code.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003eWe are looking to add multiple team members across frontend and backend roles, so we are open to your experience across the stack.\\u003c/p\\u003e\\n\\u003cp\\u003eOur stack consists primarily of Node.js with Koa, GraphQL, and Ember.js. Although we are an Ember shop, we are open to any framework experience you might have as the concepts will likely be familiar.\\u003c/p\\u003e\\n\\u003cp\\u003eThroughout the day, we rely on Slack and GitHub pull requests. The development team is completely distributed across the US, and has been since the inception of Thought Industries — we haven't bolted on remote processes due to COVID-19, we've always done it this way, so you'll feel right at home.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eAbout Thought Industries\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eThought Industries is a startup in the Online Learning space. We enable training and software companies to launch and monetize external learning programs — think Shopify meets Udemy/Coursera.\\u003c/p\\u003e\\n\\u003cp\\u003eThis is a full-time position that is based at your remote U.S. based office. No Recruiters, please.\\u003c/p\\u003e\\n\\u003cp\\u003eHeadquartered in Boston, Massachusetts, Thought Industries is one of the world’s fastest-growing online learning companies in the U.S. We are helping consumer brands and for-profit learning organizations change how they build, deploy and grow online learning businesses. Today, hundreds of customers and brands are using the Thought Industries’ Learning Business Platform to transform the way they reach, teach, and engage audiences.\\u003c/p\\u003e\\n\\u003cp\\u003eWe are a growing, well-funded technology company, with a talented team and a clear vision. This is a unique opportunity to take a lead role at an exciting SaaS software company with a robust cloud-based platform. We hire talented people who are self-motivated and team orientated. All qualified applicants will receive consideration for employment without regard to race, color, religion, sex, sexual orientation, gender identity, national origin, age, disability or veteran status.\\u003c/p\\u003e\\n\",\n    how_to_apply:\n      '\\u003cp\\u003ePlease submit a cover letter explaining what kind of role you are looking for and why Thought Industries specifically interests you along with your resume to \\u003ca href=\"mailto:devjob@thoughtindustries.com\"\\u003edevjob@thoughtindustries.com\\u003c/a\\u003e.\\u003c/p\\u003e\\n',\n    company_logo:\n      \"https://jobs.github.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbk9IIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--cf8ef4a52a69fc2375b11d224b655c662fecd537/logo.png\",\n  },\n  {\n    id: \"df4c0214-e31f-4bed-9d8c-3222c35ac914\",\n    type: \"Full Time\",\n    url:\n      \"https://jobs.github.com/positions/df4c0214-e31f-4bed-9d8c-3222c35ac914\",\n    created_at: \"Tue Aug 04 00:28:28 UTC 2020\",\n    company: \"Car Registration, inc. \",\n    company_url: \"http://www.carregistration.com\",\n    location: \"Elk Grove, CA\",\n    title: \"Software Engineer\",\n    description:\n      '\\u003cp\\u003eCar Registration, Inc.\\u003c/p\\u003e\\n\\u003cp\\u003eCar Registration, Inc. (CRI) provides comprehensive, on-line vehicle registration and titling services for consumers who desire or need a DMV alternative.  Currently licensed and bonded under the California DMV’s Business Partner Automation program, CRI successfully processes over 250,000 transactions per year while reducing wait times and allowing the CA DMV to reallocate its resources to other services and administrative tasks.  With CRI, customers can get same-day processing, next day delivery and comprehensive telephone and email support.  Through its website, CRI collects fees from vehicle owners, transmits fees to the DMV in real time and issues registration cards and stickers to the customer via USPS or express courier.\\u003c/p\\u003e\\n\\u003cp\\u003eJob Description\\nCRI, is a leader in providing consumers direct access to DMV services through our online technology. We provide customers the ability to skip the line at the DMV by using our online platform to renew, replace, or transfer their vehicle registration and title. You will join a small but profitable start-up with the ability to shape and grow our software. We are looking for a self-motivated developer that is comfortable working on a cloud-based full stack built with Go, PHP, and JavaScript for both customer-facing and internal applications. In your role, you will join a small team of software developers to build new software, new features, and maintain existing functionality.\\u003c/p\\u003e\\n\\u003cp\\u003eThis is a full-time remote position with competitive salary and benefits including medical, dental, vision, 401K plan and more. We are based in Elk Grove, CA. Though you won’t work in the office, we regularly communicate via Slack and Google Meets. Our annual holiday party is fun and inclusive and offers a great opportunity to catch-up with the team in person.\\u003c/p\\u003e\\n\\u003cp\\u003eSkills \\u0026amp; Requirements\\n1+ year professional coding with Golang\\n3+ years professional coding with PHP, Python, Ruby, or another server-side scripting language\\n2+ years professional coding with JavaScript\\n3+ years professional experience using a SQL database such as PostgreSQL, MySQL, Oracle, or MSSQL\\nExperience integrating RESTful and/or gRPC APIs\\nAbility to design and implement solutions to both frontend and backend problems from a non-technical specification into a finished feature\\nExposure to DevOps practices including infrastructure as code, continuous integration, monitoring, and logging\\nComfortable developing in a Mac or Linux environment\\nFamiliarity with event-based functional architectures\\nFamiliarity with MVC or MVVM architectures\\nSecurity-conscious practices in any software built\\u003c/p\\u003e\\n\\u003cp\\u003eDesirable Qualifications\\nExperience with cloud-based distributed systems on providers such as AWS\\nExperience with docker or container technologies\\nExperience with CDNs\\nExperience developing web-based business applications with complex workflows\\nDatabase administration experience including setting up and maintaining replication servers\\nBachelor’s degree, preferably in Computer Science or related discipline\\u003c/p\\u003e\\n\\u003cp\\u003eIf you are interested, please send your resume to \\u003ca href=\"mailto:Jobs@carregistration.com\"\\u003eJobs@carregistration.com\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003cp\\u003eCANDIDATES only please.\\u003c/p\\u003e\\n\\u003cp\\u003eEqual Opportunity Employer\\nCRI is an equal opportunity employer to all, regardless of age, ancestry, color, disability (mental and physical), exercising the right to family care and medical leave, gender, gender expression, gender identity, genetic information, marital status, medical condition, military or veteran status, national origin, political affiliation, race, religious creed, sex (includes pregnancy, childbirth, breastfeeding and related medical conditions), and sexual orientation.\\u003c/p\\u003e\\n\\u003cp\\u003eIt is an objective of CRI to achieve a drug-free workplace. Any applicant for  employment will be expected to behave in accordance with this objective.\\u003c/p\\u003e\\n',\n    how_to_apply:\n      '\\u003cp\\u003eIf you are interested, please send your resume to \\u003ca href=\"mailto:Jobs@carregistration.com\"\\u003eJobs@carregistration.com\\u003c/a\\u003e.\\u003c/p\\u003e\\n',\n    company_logo:\n      \"https://jobs.github.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbG1IIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--72882d4c37d2fd5cf977485d033eeaafee596f34/CarRegistration_Logo-02.png\",\n  },\n  {\n    id: \"534af056-a770-421a-afd0-4734c464fb5e\",\n    type: \"Full Time\",\n    url:\n      \"https://jobs.github.com/positions/534af056-a770-421a-afd0-4734c464fb5e\",\n    created_at: \"Mon Aug 03 20:26:45 UTC 2020\",\n    company: \"Agiloft\",\n    company_url: \"http://agiloft.com\",\n    location: \"Russia\",\n    title: \"Sr. Front End Developer (Remote)\",\n    description:\n      '\\u003cp\\u003e\\u003cstrong\\u003eTHRIVE WITH AGILOFT\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eAre you an experienced Sr. Front End Developer who is successful, motivated, smart, energetic, and looking for a rewarding position in a growing, profitable and dynamic company?\\u003c/p\\u003e\\n\\u003cp\\u003eAgiloft is expanding our developer team, looking for Sr. Front End Developers that thrive working with enterprises in multiple industries, with unique business challenges requiring sophisticated solution design.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eWHY JOIN AGILOFT?\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft was named the market leader in every category in the \\u003ca href=\"https://www.agiloft.com/flash/Gartner_critical_capabilities_for_CLM.pdf\"\\u003eGartner Critical Capabilities for CLM report\\u003c/a\\u003e, and a market leader in the Gartner Magic Quadrant.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eContract Lifecycle Management (CLM) is one of the fastest growing areas of enterprise sales, with a TAM projected to climb from $2B to $7B in the next 5 years.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eThe Agiloft Contract and Commerce Lifecycle Platform has won over \\u003ca href=\"https://www.agiloft.com/awards.htm\"\\u003ea dozen awards, including the Editor\\'s Choice award from PC Mag\\u003c/a\\u003e, for the past five years in a row.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft has a highly differentiated value proposition which is uniquely appealing to enterprises: pre-built applications with a deeply configurable, no-code platform for integrated Business Process Management throughout an organization.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft is pioneering the applied use of Artificial Intelligence to enable next-generation business commerce at organizations ranging from small enterprises to U.S. government agencies and Fortune 100 companies.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft is the only company in the industry with the confidence to provide an unconditional satisfaction guarantee, and you too will be successful with Agiloft.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003eAs the leader in the CCLM market, Agiloft is winning many Enterprise deals and looking to hire the best talent to meet this demand with a competitive compensation plan that rewards overachievement.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003ePOSITION OVERVIEW\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eThe Senior Front-End Developer will join the development team responsible for implementation, improvement and maintenance of the Agiloft frontend architecture. The ideal candidate will have demonstrated experience with the development and maintenance of Enterprise-grade applications as well as the application of modern frontend frameworks.\\u003c/p\\u003e\\n\\u003cp\\u003eThis is a remote-only position. You must be comfortable with setting your own schedule and proactively collaborating in a globally dispersed team using a variety of communication channels.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eJOB RESPONSIBILITIES\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eDesign, build, and maintain efficient, reusable, and reliable front-end code.\\u003c/li\\u003e\\n\\u003cli\\u003eBuild cross-browser solutions optimized for a wide range of devices.\\u003c/li\\u003e\\n\\u003cli\\u003eIdentify UI problems and bugs and devise elegant solutions.\\u003c/li\\u003e\\n\\u003cli\\u003eMake strategic technical decisions related to new products and functionalities.\\u003c/li\\u003e\\n\\u003cli\\u003eHelp maintain code quality.\\u003c/li\\u003e\\n\\u003cli\\u003eOnboard and mentor new team members.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eREQUIRED QUALIFICATIONS\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eA minimum of three years of experience in working on large projects/Enterprise applications including, but not limited to version control tools, automated software testing, automating software build tools\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eStrong knowledge of HTML5, CSS3, JavaScript and modern frontend development frameworks\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eKnowledgeable about UI development concepts like Responsive Design, SPA, Modular Design\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eWorking knowledge of Java\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003eExperience with:\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eStruts 2, JSP\\u003c/li\\u003e\\n\\u003cli\\u003ePopular JS frameworks like Vue, React, Angular\\u003c/li\\u003e\\n\\u003cli\\u003eRelational databases such as MySQL, MSSQL, Oracle\\u003c/li\\u003e\\n\\u003cli\\u003eRest API implementation\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eBENEFITS AND PERKS\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eCompetitive salary ($30 USD hourly)\\u003c/li\\u003e\\n\\u003cli\\u003eReferral bonuses\\u003c/li\\u003e\\n\\u003cli\\u003eFlexible work schedules\\u003c/li\\u003e\\n\\u003cli\\u003eProfessional development and career growth opportunities\\u003c/li\\u003e\\n\\u003cli\\u003eAwesome team members\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eINTERESTED? APPLY NOW!\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eFor a full list of open positions and to submit your application, go to our website \\u003ca href=\"http://www.agiloft.com/jobs.htm\"\\u003ehttp://www.agiloft.com/jobs.htm\\u003c/a\\u003e\\u003c/p\\u003e\\n',\n    how_to_apply:\n      '\\u003cp\\u003eFor immediate consideration, go to \\u003ca href=\"https://www.agiloft.com/jobs.htm\"\\u003ehttps://www.agiloft.com/jobs.htm\\u003c/a\\u003e, click the Apply button, fill out the online form and attach your resume.\\u003c/p\\u003e\\n',\n    company_logo:\n      \"https://jobs.github.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa3FIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--405c1ff0ada5560604737daa783da21f32fd1349/Agiloft%20Logo%20plain%20(Indeed).png\",\n  },\n  {\n    id: \"467c9673-9f0f-4ecf-af99-1a91a790f8b2\",\n    type: \"Full Time\",\n    url:\n      \"https://jobs.github.com/positions/467c9673-9f0f-4ecf-af99-1a91a790f8b2\",\n    created_at: \"Fri Jul 31 21:36:32 UTC 2020\",\n    company: \"Agiloft \",\n    company_url: \"http://www.agiloft.com\",\n    location: \"India\",\n    title: \" Sr. Front End Developer (Remote)\",\n    description:\n      '\\u003cp\\u003e\\u003cstrong\\u003eTHRIVE WITH AGILOFT\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eAre you an experienced Sr. Front End Developer who is successful, motivated, smart, energetic, and looking for a rewarding position in a growing, profitable and dynamic company?\\u003c/p\\u003e\\n\\u003cp\\u003eAgiloft is expanding our developer team, looking for Sr. Front End Developers that thrive working with enterprises in multiple industries, with unique business challenges requiring sophisticated solution design.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eWHY JOIN AGILOFT?\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft was named the market leader in every category in the \\u003ca href=\"https://www.agiloft.com/flash/Gartner_critical_capabilities_for_CLM.pdf\"\\u003eGartner Critical Capabilities for CLM report\\u003c/a\\u003e, and a market leader in the Gartner Magic Quadrant.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eContract Lifecycle Management (CLM) is one of the fastest growing areas of enterprise sales, with a TAM projected to climb from $2B to $7B in the next 5 years.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eThe Agiloft Contract and Commerce Lifecycle Platform has won over \\u003ca href=\"https://www.agiloft.com/awards.htm\"\\u003ea dozen awards, including the Editor\\'s Choice award from PC Mag\\u003c/a\\u003e, for the past five years in a row.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft has a highly differentiated value proposition which is uniquely appealing to enterprises: pre-built applications with a deeply configurable, no-code platform for integrated Business Process Management throughout an organization.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft is pioneering the applied use of Artificial Intelligence to enable next-generation business commerce at organizations ranging from small enterprises to U.S. government agencies and Fortune 100 companies.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eAgiloft is the only company in the industry with the confidence to provide an unconditional satisfaction guarantee, and you too will be successful with Agiloft.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003eAs the leader in the CCLM market, Agiloft is winning many Enterprise deals and looking to hire the best talent to meet this demand with a competitive compensation plan that rewards overachievement.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003ePOSITION OVERVIEW\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eThe Senior Front-End Developer will join the development team responsible for implementation, improvement and maintenance of the Agiloft frontend architecture. The ideal candidate will have demonstrated experience with the development and maintenance of Enterprise-grade applications as well as the application of modern frontend frameworks.\\u003c/p\\u003e\\n\\u003cp\\u003eThis is a remote-only position. You must be comfortable with setting your own schedule and proactively collaborating in a globally dispersed team using a variety of communication channels.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eJOB RESPONSIBILITIES\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eDesign, build, and maintain efficient, reusable, and reliable front-end code.\\u003c/li\\u003e\\n\\u003cli\\u003eBuild cross-browser solutions optimized for a wide range of devices.\\u003c/li\\u003e\\n\\u003cli\\u003eIdentify UI problems and bugs and devise elegant solutions.\\u003c/li\\u003e\\n\\u003cli\\u003eMake strategic technical decisions related to new products and functionalities.\\u003c/li\\u003e\\n\\u003cli\\u003eHelp maintain code quality.\\u003c/li\\u003e\\n\\u003cli\\u003eOnboard and mentor new team members.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eREQUIRED QUALIFICATIONS\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eA minimum of three years of experience in working on large projects/Enterprise applications including, but not limited to version control tools, automated software testing, automating software build tools\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eStrong knowledge of HTML5, CSS3, JavaScript and modern frontend development frameworks\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eKnowledgeable about UI development concepts like Responsive Design, SPA, Modular Design\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp\\u003eWorking knowledge of Java\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003eExperience with:\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eStruts 2, JSP\\u003c/li\\u003e\\n\\u003cli\\u003ePopular JS frameworks like Vue, React, Angular\\u003c/li\\u003e\\n\\u003cli\\u003eRelational databases such as MySQL, MSSQL, Oracle\\u003c/li\\u003e\\n\\u003cli\\u003eRest API implementation\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eBENEFITS AND PERKS\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003eCompetitive salary ($30 USD hourly)\\u003c/li\\u003e\\n\\u003cli\\u003eReferral bonuses\\u003c/li\\u003e\\n\\u003cli\\u003eFlexible work schedules\\u003c/li\\u003e\\n\\u003cli\\u003eProfessional development and career growth opportunities\\u003c/li\\u003e\\n\\u003cli\\u003eAwesome team members\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eINTERESTED? APPLY NOW!\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eFor a full list of open positions and to submit your application, go to our website \\u003ca href=\"http://www.agiloft.com/jobs.htm\"\\u003ehttp://www.agiloft.com/jobs.htm\\u003c/a\\u003e\\u003c/p\\u003e\\n',\n    how_to_apply:\n      '\\u003cp\\u003eFor immediate consideration, go to \\u003ca href=\"https://www.agiloft.com/jobs.htm\"\\u003ehttps://www.agiloft.com/jobs.htm\\u003c/a\\u003e, click the Apply button, fill out the online form and attach your resume.\\u003c/p\\u003e\\n',\n    company_logo:\n      \"https://jobs.github.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaTJIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d382a9619048c4335f6a0c9d5e7a003d4daf4ae4/Agiloft%20Logo%20plain%20(Indeed).png\",\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport { API_URL } from \"./constants\";\nimport mockData from \"./mockData\";\nimport { JobItem } from \"../components\";\n\nconst HookComponent = () => {\n  /**\n   * Efecto 1. Hacer una llamada API\n   * a un servicio externo al cargar el componente..\n   */\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    const callApi = async () => {\n      setIsLoading(true);\n      const response = await fetch(API_URL);\n      if (response.status !== 200) {\n        setError(response.statusText);\n      }\n      setData(response.status === 200 ? await response.json() : mockData);\n      setIsLoading(false);\n    };\n    callApi();\n  }, []);\n\n  /**\n   * Efecto 2. Afectar el DOM directamente cambiando\n   * el título de la página.\n   */\n  const [title, setTitle] = useState(\"Select Job\");\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  /**\n   * Efecto 3. Detectar el movimiento del mouse para mostrar\n   * una alerta si se desea salir de la página.\n   */\n  useEffect(() => {\n    const target = document.body;\n    target.addEventListener(\n      \"mouseout\",\n      (e) => e.clientY < 10 && alert(\"Hey don't leave please.\")\n    );\n    return () => target.removeEventListener(\"mouseout\", () => \"See you..\");\n  }, []);\n\n  return (\n    <div>\n      Ejemplo del hook useEffect(). <br />\n      {isLoading ? (\n        \"Loading...\"\n      ) : (\n        <div>\n          <small>{error && error}</small>\n          {data.map((item, index) => {\n            return (\n              <JobItem\n                key={index}\n                item={item}\n                handleClick={() => setTitle(item.title)}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HookComponent;\n","export const API_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=react.js&page=1';","import React from \"react\";\n\nconst DefaultValue = {\n  language: \"ES\",\n  setLanguage: () => {}\n};\n\nconst LanguageContext = React.createContext(DefaultValue);\n\nexport { DefaultValue,  LanguageContext};\nexport default LanguageContext.Provider;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { LanguageContext } from \"../providers/LanguageProvider\";\n\nconst Styled = styled.span`\n  color: ${({ isActive = false }) => (isActive ? \"#61dafb\" : \"#FFF\")};\n  margin-left: 5px;\n  cursor: pointer;\n`;\n\nconst LanguageItem = ({ text }) => {\n\n  const context = useContext(LanguageContext);\n  const isActive = text === context.language;\n\n  return (\n    <Styled onClick={() => context.setLanguage(text)} isActive={isActive}>\n      {text}\n    </Styled>\n  );\n};\n\nexport default LanguageItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport LanguageItem from \"./LanguageItem\";\n\nconst Styled = styled.div`\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nconst Languages = () => {\n  return (\n    <Styled>\n      <LanguageItem text=\"ES\" /> |\n      <LanguageItem text=\"EN\" /> |\n      <LanguageItem text=\"FR\" />\n    </Styled>\n  );\n};\n\nexport default Languages;\n","export default {\n  ES: {\n    welcome: \"Bienvenido a mogueloDev\",\n    title1: \"¿Cuándo usar Context?\",\n    description1:\n      \"Context está diseñado para compartir datos que pueden considerarse globales para un árbol de componentes en React, como el usuario autenticado actual, el tema o el idioma preferido.\",\n    title2: \"Antes de usar Context\",\n    description2:\n      \"Context se usa principalmente cuando algunos datos tienen que se accesibles por muchos componentes en diferentes niveles de anidamiento. Aplícalo con moderación porque hace que la reutilización de componentes sea más difícil.\",\n    title3: \"React.createContext\",\n    description3:\n      \"Crea un objeto Context. Cuando React renderiza un componente que se suscribe a este objeto Context, este leerá el valor de contexto actual del Provider más cercano en el árbol.\",\n    title4: \"Context.Provider\",\n    description4:\n      \"Cada objeto Context viene con un componente Provider de React que permite que los componentes que lo consumen se suscriban a los cambios del contexto.\",\n    title5: \"Context.Consumer\",\n    description5:\n      \" Un componente de React que se suscribe a cambios de contexto. Esto le permite suscribirse a un contexto dentro de un componente de función.\",\n    title6: \"Class.contextType\",\n    description6:\n      \"A la propiedad contextType en una clase se le puede asignar un objeto Context creado por React.createContext(). Esto te permite consumir el valor actual más cercano de ese Context utilizando this.context. Puedes hacer referencia a esto en cualquiera de los métodos del ciclo de vida, incluida la función de renderizado.\",\n  },\n  EN: {\n    welcome: \"Welcome to mogueloDev\",\n    title1: \"When to use Context?\",\n    description1:\n      \"Context is designed to share data that can be considered global for a component tree in React, such as the current authenticated user, the theme or the preferred language.\",\n    title2: \"Before using Context\",\n    description2:\n      \"Context is mainly used when some data has to be accessible by many components at different nesting levels. Apply it sparingly because it makes component reuse more difficult.\",\n    title3: \"React.createContext\",\n    description3:\n      \"Create a Context object. When React renders a component that subscribes to this Context object, it will read the current context value of the closest Provider in the tree.\",\n    title4: \"Context.Provider\",\n    description4:\n      \"Each Context object comes with a React Provider component that allows the components that consume it to subscribe to the context changes.\",\n    title5: \"Context.Consumer\",\n    description5:\n      \"A component of React that subscribes to context changes. This allows you to subscribe to a context within a function component.\",\n    title6: \"Class.contextType\",\n    description6:\n      \"The contextType property in a class can be assigned a Context object created by React.createContext(). This allows you to consume the closest current value of that Context using this.context. You can reference this in any of the lifecycle methods, including the rendering function.\",\n  },\n  FR: {\n    welcome: \"Bienvenue à mogueloDev\",\n    title1: \"Quand utiliser Contexte ?\",\n    description1:\n      \"Le contexte est conçu pour partager des données qui peuvent être considérées comme globales pour un arbre de composants dans React, comme l'utilisateur authentifié actuel, le thème ou la langue préférée.\",\n    title2: \"Avant d'utiliser le contexte\",\n    description2:\n      \"Le contexte est principalement utilisé lorsque certaines données doivent être accessibles par de nombreuses composantes à différents niveaux d'emboîtement. Appliquez-le avec parcimonie car il rend la réutilisation des composants plus difficile.\",\n    title3: \"React.createContext\",\n    description3:\n      \"Créer un objet Contexte. Lorsque React rend un composant qui souscrit à cet objet Contexte, il lira la valeur de contexte actuelle du fournisseur le plus proche dans l'arbre.\",\n    title4: \"Context.Provider\",\n    description4:\n      \"Chaque objet de contexte est livré avec un composant React Provider qui permet aux composants qui le consomment de s'abonner aux changements de contexte.\",\n    title5: \"Context.Consumer\",\n    description5:\n      \"Une composante de React qui souscrit aux changements de contexte. Cela vous permet de vous abonner à un contexte au sein d'un composant de fonction.\",\n    title6: \"Class.contextType\",\n    description6:\n      \"La propriété contextType d'une classe peut se voir attribuer un objet Context créé par React.createContext(). Cela vous permet de consommer la valeur actuelle la plus proche de ce contexte en utilisant ce .context. Vous pouvez y faire référence dans toutes les méthodes du cycle de vie, y compris la fonction de rendu.\",\n  },\n};\n","import React, { useContext } from \"react\";\nimport { LanguageContext } from \"../providers/LanguageProvider\";\nimport styled from \"styled-components\";\nimport i18n from \"../i18n\";\n\nconst Styled = styled.span`\n    font-size: 25px;\n`;\n\nconst Message = () => {\n\nconst context = useContext(LanguageContext);    \nreturn <Styled>{i18n[context.language]['welcome']}</Styled>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Languages from \"./Languages\";\nimport Message from \"./Message\";\n\nconst Styled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst MainBar = () => {\n  return (\n    <Styled>\n      <Message  />\n      <Languages />\n    </Styled>\n  );\n};\n\nexport default MainBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MainBar from \"./MainBar\";\n\nconst Styled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #20232a;\n  width: 100%;\n  height: 50px;\n  position: fixed;\n  color: #fff;\n  top: 0;\n`;\n\nconst Header = () => {\n  return (\n    <Styled>\n      <MainBar />\n    </Styled>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Card } from \"../../components\";\n\nconst Styled = styled(Card)`\n  width: 400px;\n  padding: 5px 15px 15px;\n  margin: 15px;\n`;\n\nconst Description = styled.div`\n  line-height: 1.5;\n`;\n\nconst CustomCard = ({ text, description }) => {\n  return (\n    <Styled>\n      <h1>{text}</h1>\n      <Description>{description}</Description>\n    </Styled>\n  );\n};\n\nexport default CustomCard;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport CustomCard from \"./CustomCard\";\nimport i18n from \"../i18n\";\nimport { LanguageContext } from '../providers/LanguageProvider';\n\nconst Styled = styled.div`\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 60px 20px;\n`;\n\nconst Content = () => {\n\n  const context = useContext(LanguageContext);\n  const language = context.language;\n  \n  return (\n    <Styled>\n      <CustomCard\n        text={i18n[language][\"title1\"]}\n        description={i18n[language][\"description1\"]}\n      />\n      <CustomCard\n        text={i18n[language][\"title2\"]}\n        description={i18n[language][\"description2\"]}\n      />\n      <CustomCard\n        text={i18n[language][\"title3\"]}\n        description={i18n[language][\"description3\"]}\n      />\n      <CustomCard\n        text={i18n[language][\"title4\"]}\n        description={i18n[language][\"description4\"]}\n      />\n      <CustomCard\n        text={i18n[language][\"title5\"]}\n        description={i18n[language][\"description5\"]}\n      />\n      <CustomCard\n        text={i18n[language][\"title6\"]}\n        description={i18n[language][\"description6\"]}\n      />\n    </Styled>\n  );\n};\n\nexport default Content;\n","import React, { useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Header, Content } from \"./components\";\nimport LanguageProvider from \"./providers/LanguageProvider\";\n\nconst GlobalStyle = createGlobalStyle`\n    body { \n        display: block;\n        padding: 0px;\n        width: 100%;\n        margin: 0;\n    }\n`;\n\nconst HookComponent = () => {\n  const [language, setLanguage] = useState(\"ES\");\n\n  const value = {\n    language,\n    setLanguage,\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <LanguageProvider value={value}>\n        <Header />\n        <Content />\n      </LanguageProvider>\n    </>\n  );\n};\n\nexport default HookComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Styled = styled.div`\n  padding: 16px;\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\n  font-size: 20px;\n  cursor: pointer;\n  transition: all 0.1s linear;\n\n  ${({ isActive = false }) =>\n    !isActive && \"text-decoration: line-through; color: #c8cacc;\"}\n`;\n\nconst Item = ({ text, isActive, handleClickItem }) => {\n  return (\n    <Styled onClick={handleClickItem} isActive={isActive}>\n      {text}\n    </Styled>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Align = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ContainerButtons = styled(Align)``;\n\nconst Container = styled(Align)`\n  padding: 8px 16px;\n  font-size: 12px;\n  color: #777;\n`;\n\nconst Button = styled.div`\n  background: none;\n  border: none;\n  font-size: 12px;\n  margin: 5px;\n  border: ${({ isActive = false }) => (isActive ? \"1px solid #777\" : \"none\")};\n  border-radius: 2px;\n  padding: 3px 5px;\n  cursor: pointer;\n  text-align: center;\n`;\n\nconst Footer = ({\n  totalItems,\n  active,\n  handleClickFilter,\n  handleClickClear,\n  handleClickReset,\n}) => {\n  return (\n    <Container>\n      <div>{totalItems} items left</div>\n      <ContainerButtons>\n        <Button\n          isActive={active === \"all\"}\n          onClick={() => handleClickFilter(\"all\")}\n        >\n          All\n        </Button>\n        <Button\n          isActive={active === \"active\"}\n          onClick={() => handleClickFilter(\"active\")}\n        >\n          Active\n        </Button>\n        <Button\n          isActive={active === \"complete\"}\n          onClick={() => handleClickFilter(\"complete\")}\n        >\n          Complete\n        </Button>\n      </ContainerButtons>\n      <ContainerButtons>\n        <Button onClick={handleClickClear}>Clear</Button>\n        <Button onClick={handleClickReset}>Reset</Button>\n      </ContainerButtons>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\nimport { Card } from '../../components';\n\nexport default styled(Card)`\n  padding: 0px;\n  border-radius: 5px;\n`;","import styled from \"styled-components\";\n\nexport default styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  font-size: 20px;\n  padding: 16px;\n  border: none;\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\n  outline: none;\n  font-family: roboto;\n  font-weight: 100;\n\n  ::placeholder  {\n    font-weight: 300;\n    font-style: italic;\n    color: #c8cacc;\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  font-size: 80px;\n  font-weight: 100;\n  color: #af2f2f26;\n  margin-bottom: 10px;\n  width: 100%;\n  text-align: center;\n`;","import {\n  HANDLE_CHANGE_INPUT,\n  ADD_ITEM,\n  RESET_INPUT,\n  TOGGLE_ITEM,\n  SET_ACTIVE_FILTER,\n  CLEAR_COMPLETED,\n  RESET_STATE,\n} from \"./constants\";\n\nconst INITIAL_STATE = {\n  text: \"\",\n  activeFilter: \"all\",\n  items: [\n    {\n      id: 1,\n      text: \"Learn hook useState\",\n      active: true,\n    },\n    {\n      id: 2,\n      text: \"Learn hook useEffect\",\n      active: true,\n    },\n    {\n      id: 3,\n      text: \"Learn hook useContext\",\n      active: true,\n    },\n    {\n      id: 4,\n      text: \"Learn hook useReducer\",\n      active: true,\n    },\n  ],\n};\n\nconst init = () => {\n    return INITIAL_STATE;\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case HANDLE_CHANGE_INPUT:\n      return {\n        ...state,\n        text: action.payload,\n      };\n\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [\n          { id: new Date().valueOf(), text: state.text, active: true },\n          ...state.items,\n        ],\n        text: action.payload,\n      };\n\n    case RESET_INPUT:\n      return { ...state, text: \"\" };\n\n    case TOGGLE_ITEM:\n      return {\n        ...state,\n        items: state.items.map((item) =>\n          item.id !== action.payload ? item : { ...item, active: !item.active }\n        ),\n      };\n\n    case SET_ACTIVE_FILTER:\n      return {\n        ...state,\n        activeFilter: action.payload,\n      };\n\n    case CLEAR_COMPLETED:\n      return {\n        ...state,\n        items: state.items.filter((item) => item.active),\n      };\n\n    case RESET_STATE:\n        return init();\n\n    default:\n      return state;\n  }\n};\n\nexport { INITIAL_STATE, init };\nexport default reducer;\n","export const HANDLE_CHANGE_INPUT = 'useReducer/handleChangeInput';\nexport const ADD_ITEM = 'useReducer/addItem';\nexport const RESET_INPUT = 'useReducer/resetInput';\nexport const TOGGLE_ITEM = 'useReducer/toggleItem';\nexport const SET_ACTIVE_FILTER = 'useReducer/activeFilter';\nexport const CLEAR_COMPLETED = 'useReducer/clearCompleted';\nexport const RESET_STATE = 'useReducer/resetState';\n","import React, { useReducer } from \"react\";\nimport { Item, Footer, Card, Input, Title } from \"./components\";\nimport { objectToString } from \"../utils\";\nimport reducer, { INITIAL_STATE, init } from \"./reducer\";\nimport {\n  handleChangeInput,\n  addItem,\n  resetInput,\n  toggleItem,\n  setActiveFilter,\n  clearCompleted,\n  resetState,\n} from \"./actions\";\n\nconst HookComponent = () => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE, init);\n\n  const { text, activeFilter, items } = state;\n\n  const filteredData = () => {\n    const filterByStatus = items.filter((item) =>\n      activeFilter === \"all\"\n        ? true\n        : activeFilter === \"active\"\n        ? item.active\n        : !item.active\n    );\n\n    return text\n      ? filterByStatus.filter((item) => item.text.indexOf(text) > -1)\n      : filterByStatus;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addItem());\n    dispatch(resetInput());\n  };\n\n  return (\n    <>\n        <Title>todos</Title>\n        <Card width={350}>\n          <form onSubmit={handleSubmit}>\n            <Input\n              placeholder=\"What are you thinking to do?\"\n              onChange={(e) => dispatch(handleChangeInput(e.target.value))}\n              value={text}\n            />\n          </form>\n          {filteredData().map((item) => (\n            <Item\n              key={item.id}\n              text={item.text}\n              isActive={item.active}\n              handleClickItem={() => dispatch(toggleItem(item.id))}\n            />\n          ))}\n          <Footer\n            totalItems={items.filter((item) => item.active).length}\n            handleClickFilter={(filter) => dispatch(setActiveFilter(filter))}\n            active={activeFilter}\n            handleClickClear={() => dispatch(clearCompleted())}\n            handleClickReset={() => dispatch(resetState())}\n          />\n        </Card>\n        <pre>{objectToString(state)}</pre>\n    </>\n  );\n};\n\nexport default HookComponent;\n","import {\n  HANDLE_CHANGE_INPUT,\n  ADD_ITEM,\n  RESET_INPUT,\n  TOGGLE_ITEM,\n  SET_ACTIVE_FILTER,\n  CLEAR_COMPLETED,\n  RESET_STATE,\n} from \"./constants\";\n\nexport const handleChangeInput = (value) => ({\n  type: HANDLE_CHANGE_INPUT,\n  payload: value,\n});\n\nexport const addItem = () => ({ type: ADD_ITEM });\n\nexport const resetInput = () => ({ type: RESET_INPUT });\n\nexport const toggleItem = (id) => ({\n  type: TOGGLE_ITEM,\n  payload: id,\n});\n\nexport const setActiveFilter = (filter) => ({\n  type: SET_ACTIVE_FILTER,\n  payload: filter,\n});\n\nexport const clearCompleted = () => ({\n    type: CLEAR_COMPLETED,\n});\n\nexport const resetState = () => ({\n    type: RESET_STATE,\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background: none;\n  border: 1px solid #fff;\n  padding: 5px 15px;\n  font-weight: 600;\n  font-size: 15px;\n  border-radius: 5px;\n  box-shadow: 3px 3px 3px rgb(0, 0, 0, 0.1);\n  outline: none;\n\n  span {\n    color: ${({ icon }) => (icon === \"heart\" ? \"#FF0000\" : \"#F79D00\")};\n  }\n`;\n\nconst Button = ({ icon, handleClick, times }) => {\n  return (\n    <StyledButton icon={icon} onClick={handleClick}>\n      I <span className={`fa fa-${icon}`} /> this Page: {times}\n    </StyledButton>\n  );\n};\n\nexport default React.memo(Button);\n","import React from \"react\";\nimport { Card } from \"../../components\";\n\nconst Posts = ({ data }) => {\n\n  return (\n    <div>\n      {data.map((post) => (\n        <Card width={700} key={post.id}>\n          <h4>{post.title.toUpperCase()}</h4>\n          <p>{post.body}</p>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(Posts);\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { API_URL } from \"./constants\";\nimport Button from \"./components/Button\";\nimport Posts from \"./components/Posts\";\nimport { Input } from \"../components\";\n\nconst HookComponent = () => {\n  // Call api Service\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const callApi = async () => {\n      const response = await fetch(API_URL);\n      setData(await response.json());\n    };\n    callApi();\n  }, []);\n\n  // Filter posts.\n  const [term, setTerm] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTerm(e.target.value);\n  };\n\n  const filteredData = useMemo(\n    () => data.filter((item) => item.title.indexOf(term) > -1),\n    [data, term]\n  );\n\n  // Counters\n  const [loveCounter, setLoveCounter] = useState(0);\n  const [hateCounter, setHateCounter] = useState(0);\n\n  const handleClickButtonLove = useCallback(() => {\n    setLoveCounter(loveCounter + 1);\n  }, [loveCounter]);\n\n  const handleClickButtonHate = useCallback(() => {\n    setHateCounter(hateCounter + 1);\n  }, [hateCounter]);\n\n  return (\n    <div>\n      <h3>\n        Posts{\" \"}\n        <Button\n          icon=\"heart\"\n          times={loveCounter}\n          handleClick={handleClickButtonLove}\n        />\n        <Button\n          icon=\"angry\"\n          times={hateCounter}\n          handleClick={handleClickButtonHate}\n        />\n      </h3>\n      <Input handleChange={handleChange} placeholder=\"Search...\" value={term} />\n      <Posts data={filteredData} />\n    </div>\n  );\n};\n\nexport default HookComponent;\n","export const API_URL = \"https://jsonplaceholder.typicode.com/posts\";","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport UseStateHookExample from \"./useState/HookComponent\";\nimport UseEffectHookExample from \"./useEffect/HookComponent\";\nimport UseContextExample from \"./useContext/HookComponent\";\nimport UseReducerExample from \"./useReducer/HookComponent\";\nimport MemoizationExample from \"./memoization/HookComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={`${process.env.PUBLIC_URL}`}>\n        <Switch>\n          <Route exact path=\"/\">\n            <UseStateHookExample />\n          </Route>\n          <Route path=\"/useState\">\n            <UseStateHookExample />\n          </Route>\n          <Route path=\"/useEffect\">\n            <UseEffectHookExample />\n          </Route>\n          <Route path=\"/useContext\">\n            <UseContextExample />\n          </Route>\n          <Route path=\"/useReducer\">\n            <UseReducerExample />\n          </Route>\n          <Route path=\"/memoization\">\n            <MemoizationExample />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}